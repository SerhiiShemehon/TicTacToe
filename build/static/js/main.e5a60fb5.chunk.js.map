{"version":3,"sources":["reducers/blocksReducer.js","reducers/winGameReducer.js","reducers/stepReducer.js","reducers/index.js","constants.js","store.js","service/createGame.js","actions/winGame.js","actions/updateStep.js","service/isWin.js","components/block/block.jsx","containers/game/game.jsx","actions/getBlocks.js","actions/updateBlocks.js","components/button/button.jsx","containers/winBlock/winBlock.jsx","containers/app/app.jsx","index.js"],"names":["INITIAL_DATA","blocks","userWin","step","rootReducer","combineReducers","blocksReducer","state","action","type","payload","winGameReducer","stepReducer","store","createStore","applyMiddleware","thunk","createGame","i","row","j","push","numberI","numberJ","value","winGame","data","dispatch","updateStep","isWin","length","sunRow","sunColumn","sumDiagonal1","sumDiagonal2","Block","changeStep","currentBlockNumber","useState","checked","setChecked","user","setChangeUser","blockUser","className","onClick","mapDispatchToProps","getBlocks","updateBlocks","GameContainers","connect","useEffect","newBlocksData","map","item","Fragment","key","block","Button","func","text","WinBlockContainers","AppContainers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5a60fb5.chunk.js","sourcesContent":["import {\r\n    BLOCKS_DATA,\r\n    BLOCKS_UPDATE_DATA\r\n} from \"../constants\";\r\n\r\nconst INITIAL_DATA = {\r\n    blocks: [],\r\n};\r\n\r\nexport const blocksReducer = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case BLOCKS_DATA: {\r\n            return {\r\n                ...state,\r\n                blocks: [...action.payload]\r\n            };\r\n        }\r\n        case BLOCKS_UPDATE_DATA: {\r\n            return {\r\n                ...state,\r\n                blocks: [...action.payload]\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import {\r\n    WIN_DATA\r\n} from \"../constants\";\r\n\r\nconst INITIAL_DATA = {\r\n    userWin: false,\r\n};\r\n\r\nexport const winGameReducer = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case WIN_DATA: {\r\n            return {\r\n                ...state,\r\n                userWin: action.payload\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import {\r\n    UPDATE_STEP\r\n} from \"../constants\";\r\n\r\nconst INITIAL_DATA = {\r\n    step: 0,\r\n};\r\n\r\nexport const stepReducer = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_STEP: {\r\n            return {\r\n                ...state,\r\n                step: action.payload\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport { blocksReducer } from \"./blocksReducer\";\r\nimport { winGameReducer } from \"./winGameReducer\";\r\nimport { stepReducer } from \"./stepReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    blocksReducer,\r\n    winGameReducer,\r\n    stepReducer\r\n});","export const BLOCKS_DATA = 'BLOCKS_DATA';\r\nexport const BLOCKS_UPDATE_DATA = 'BLOCKS_UPDATE_DATA';\r\nexport const WIN_DATA = 'WIN_DATA';\r\nexport const UPDATE_STEP = 'UPDATE_STEP';","import thunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\nimport { rootReducer } from \"./reducers\";\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","export const createGame = () => {\r\n    const blocks = [];\r\n    for (let i = 0; i < 3; i++){\r\n        const row = [];\r\n        for( let j = 0; j < 3; j++){\r\n            row.push({\r\n                numberI: i,\r\n                numberJ: j,\r\n                value: 0\r\n            });\r\n        }\r\n        blocks.push(row);\r\n    }\r\n    return blocks;\r\n}","import { WIN_DATA } from \"../constants\";\r\n\r\nconst winData = (payload) => ({\r\n    type: WIN_DATA,\r\n    payload\r\n});\r\n\r\nexport const winGame = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(winData(data));\r\n    };\r\n}","import { UPDATE_STEP } from \"../constants\";\r\n\r\nconst updateData = (payload) => ({\r\n    type: UPDATE_STEP,\r\n    payload\r\n});\r\n\r\nexport const updateStep = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(updateData(data));\r\n    };\r\n}","export const isWin = (blocks) => {\r\n    if(blocks.length){\r\n        for (let i = 0; i < 3; i++){\r\n            let sunRow = 0;\r\n            let sunColumn = 0;\r\n\r\n            for (let j = 0; j < 3; j++){\r\n                sunRow = sunRow + blocks[i][j].value;\r\n                sunColumn = sunColumn + blocks[j][i].value;\r\n            }\r\n\r\n            if (sunRow === 3 || sunColumn === 3) {\r\n                return 'Winner X';\r\n            } else if (sunRow === 30 || sunColumn === 30) {\r\n                return 'Winner O';\r\n            }\r\n        }\r\n        let sumDiagonal1 = blocks[0][0].value + blocks[1][1].value + blocks[2][2].value;\r\n        let sumDiagonal2 = blocks[0][2].value + blocks[1][1].value + blocks[2][0].value;\r\n\r\n        if (sumDiagonal1 === 3 || sumDiagonal2 === 3) {\r\n            return 'Winner X';\r\n        } else if (sumDiagonal1 === 30 || sumDiagonal2 === 30) {\r\n            return 'Winner O';\r\n        }\r\n    }\r\n    return false;\r\n}","import React, {useState} from \"react\";\r\n\r\nimport './block.scss';\r\n\r\nexport const Block = ({\r\n                          step,\r\n                          changeStep,\r\n                          numberI,\r\n                          numberJ,\r\n                          currentBlockNumber\r\n}) => {\r\n    const [checked, setChecked] = useState(false);\r\n    const [user, setChangeUser] = useState('user_x');\r\n\r\n    const blockClick = () => {\r\n        if(!checked){\r\n            let value = 0;\r\n            if(step % 2 === 0){\r\n                setChangeUser('user_x');\r\n                value = 1;\r\n            } else {\r\n                setChangeUser('user_o');\r\n                value = 10;\r\n            }\r\n            setChecked(true);\r\n            changeStep();\r\n            currentBlockNumber(numberI, numberJ, value);\r\n        }\r\n    }\r\n\r\n    let blockUser = checked ? user : '';\r\n\r\n    return (\r\n        <div\r\n            className={`block-item ${blockUser}`}\r\n            onClick={blockClick}\r\n        />\r\n    )\r\n}","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    getBlocks,\r\n    updateBlocks,\r\n    winGame,\r\n    updateStep\r\n} from \"actions\";\r\n\r\nimport {isWin} from 'service/isWin';\r\nimport {Block} from 'components/block'\r\n\r\nimport './game.scss';\r\n\r\nconst Game = ({\r\n        blocks,\r\n        getBlocks,\r\n        updateBlocks,\r\n        winGame,\r\n        updateStep,\r\n        step\r\n  }) => {\r\n    useEffect(() => {\r\n        getBlocks();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if( step > 4 && !!isWin(blocks) ){\r\n            winGame(isWin(blocks));\r\n        } else if (step >= 9){\r\n            winGame('Draw');\r\n        }\r\n    }, [blocks, step]);\r\n\r\n    const currentBlockNumber = (numberI, numberJ, value) => {\r\n        const newBlocksData = [...blocks];\r\n        newBlocksData[numberI][numberJ].value = value;\r\n        updateBlocks(newBlocksData);\r\n    }\r\n\r\n    const changeStep = () => {\r\n        updateStep(step + 1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"game-board\">\r\n            {blocks && blocks.length && blocks.map((item,i) => <React.Fragment key={i}>\r\n                {item.map((block, j) => <Block\r\n                    key={`${i}${j}`}\r\n                    step={step}\r\n                    changeStep={changeStep}\r\n                    numberI={block.numberI}\r\n                    numberJ={block.numberJ}\r\n                    currentBlockNumber={currentBlockNumber}\r\n                />)}\r\n            </React.Fragment> )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    blocks: state.blocksReducer.blocks,\r\n    step: state.stepReducer.step\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getBlocks,\r\n    updateBlocks,\r\n    winGame,\r\n    updateStep\r\n};\r\n\r\nexport const GameContainers = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Game);","import { BLOCKS_DATA } from \"../constants\";\r\nimport {createGame} from 'service/createGame';\r\n\r\nconst getData = () => ({\r\n    type: BLOCKS_DATA,\r\n    payload: createGame()\r\n});\r\n\r\nexport const getBlocks = () => {\r\n    return (dispatch) => {\r\n        dispatch(getData());\r\n    };\r\n}","import { BLOCKS_UPDATE_DATA } from \"../constants\";\r\n\r\nconst updateData = (payload) => ({\r\n    type: BLOCKS_UPDATE_DATA,\r\n    payload\r\n});\r\n\r\nexport const updateBlocks = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(updateData(data));\r\n    };\r\n}","import React from \"react\";\r\n\r\nimport './button.scss';\r\n\r\nexport const Button = ({func, text}) => {\r\n    return (\r\n        <button onClick={func} className=\"btn\">{text}</button>\r\n    )\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    updateStep,\r\n    winGame\r\n} from \"../../actions\";\r\n\r\nimport {Button} from 'components/button';\r\n\r\nimport './winBlock.scss';\r\n\r\nconst WinBlock = ({\r\n    user,\r\n    updateStep,\r\n    winGame\r\n}) => {\r\n    const restart = () => {\r\n        winGame(false);\r\n        updateStep(0);\r\n    }\r\n\r\n    return (\r\n        <div className=\"win-holder\">\r\n            <h1>{user}</h1>\r\n            <Button text='restart' func={restart} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    winGame,\r\n    updateStep\r\n};\r\n\r\nexport const WinBlockContainers = connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(WinBlock);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {GameContainers} from \"containers/game\";\r\nimport {WinBlockContainers} from \"containers/winBlock\"\r\n\r\nimport './app.scss';\r\n\r\nfunction App({\r\n    userWin\r\n}) {\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1 className=\"title-block\">Tic Tac Toe</h1>\r\n            { !!userWin\r\n                ? <WinBlockContainers user={userWin} />\r\n                : <GameContainers />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userWin: state.winGameReducer.userWin\r\n});\r\n\r\nexport const AppContainers = connect(\r\n    mapStateToProps\r\n)(App);\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from 'store';\nimport {AppContainers} from 'containers/app';\n\nimport 'scss/index.scss';\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppContainers />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}